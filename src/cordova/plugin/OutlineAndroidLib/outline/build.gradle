plugins {
    id 'com.android.library'
}

android {
    namespace 'org.outline'
    compileSdk 30

    defaultConfig {
        minSdk 22
        targetSdk 30

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    // To make this project editable directly in the source tree, we need to load
    // tun2socks.aar from its original path in the third_party directory.  We do
    // this by relative path:
    compileOnly fileTree(dir: '../../../../../third_party/outline-go-tun2socks/android', include: ['tun2socks.aar'])
    // However, Cordova uses this library as a subproject of plugins/cordova-plugin-outline/
    // which results in it being built from a different path, so we need a different
    // relative path to locate tun2socks.aar:
    compileOnly fileTree(dir: '../../../../third_party/outline-go-tun2socks/android', include: ['tun2socks.aar'])
    // These can't both be correct.  Luckily, gradle silently ignores fileTree()
    // directives that don't match any files.

    implementation 'io.sentry:sentry-android:2.0.2'
    implementation 'org.apache.commons:commons-collections4:4.4'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}