name: Build and Test

on: [push, pull_request]

jobs:
# TODO cache installed modules: https://github.com/actions/cache
  build-and-test:
    name: Build and Test Web App
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - build_command: "yarn gulp build --platform=browser && yarn do scripts/test"
          - build_command: "yarn do src/electron/build"


    steps:
      - name: Checkout repo
        uses: actions/checkout@v1

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 10

      - name: Show Environment Info
        run: yarn -v

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Check yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Build
        run: eval "${{ matrix.build_command }}"
  
  # build-electron:
  #   name: Build Electron App
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout repo
  #       uses: actions/checkout@v1

  #     - name: Install Node.js, NPM and Yarn
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: 10
       
  #     - name: Show Environment Info
  #       run: yarn -v

  #     - name: Build
  #       run: yarn && yarn do src/electron/build
